#起手式
  library(shiny)
  #設計客戶端
  ui <- fluidPage()
  #設計伺服器端
  server <- function(input, output) {}
  #將設計客戶、伺服器端分別呼叫
  shinyApp(ui = ui, server = server)
  
#Ui端類方法
  #Input
    #教學1_PDF_P24
  #Output
    #教學1_PDF_P28
    
  #範例
    ui <- fluidPage(
            sliderInput(inputId = "num",
            #sliderInput的Id為"num"
            label = "Choose a number",
            value = 25, min = 1, max = 100),
            plotOutput("hist")
            #plotOutput的ID為"hist"
           )
    server <- function(input, output) {}
    shinyApp(ui = ui, server = server)
   
#Server端類方法
  #Render-水管意味
    #教學1_PDF_P40
  
  #範例
     server <- function(input, output) {
        output$hist <- renderPlot({上
        hist(rnorm(input$num))
            #server端的output接上ui端的outputId
              ,使用plot水管方法,將ui端outputId標
              上rnorm亂數引數接ui端的inputId.
        })
     }

#ShinyApp, Ui,Server
  #ShinyApp = Ui + Server = 可執行
  #Ui + Server = 可執行
  #不同在於設計時的個人喜好
  #可從RSTUDIO去設定ShinyAPP或分離為Ui , server
